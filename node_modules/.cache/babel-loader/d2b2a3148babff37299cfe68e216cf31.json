{"ast":null,"code":"var _jsxFileName = \"/home/aafrin/codes/01-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport AuthContext from '../../Context/auth-context';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    console.log('input psswored red');\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const ctx = useContext(AuthContext); // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      console.log(\"checking form validity\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('clean uppp');\n      clearTimeout(handler);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.value.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    ctx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"udxJhygFaOjKHgFd9QBLou9xcaU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/aafrin/codes/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","AuthContext","Card","classes","Button","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","console","log","trim","length","Login","props","ctx","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","handler","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useReducer,useContext } from 'react';\n\nimport AuthContext from '../../Context/auth-context';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    console.log('input psswored red')\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: '', isValid: false };\n};\n\n\n\n\nconst Login = (props) => {\n  const ctx=useContext(AuthContext)\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState,dispatchEmail]=useReducer(emailReducer,{\n    value:'',\n    isValid:null,\n  });\n  const [passwordState,dispatchPassword]=useReducer(passwordReducer,{\n    value:'',\n    isValid:null,\n  });\n\n  \n  const {isValid:emailIsValid}=emailState;\n  const {isValid:passwordIsValid}=passwordState;\n  \n\n  useEffect(()=>{\n    \n    const handler=setTimeout(()=>{\n      console.log(\"checking form validity\");\n      setFormIsValid(\n       emailIsValid && passwordIsValid\n      );\n    },500)\n\n\n     return ()=>{\n       console.log('clean uppp');\n       clearTimeout(handler)\n\n     }\n    \n\n  },[emailIsValid,passwordIsValid])\n\n  \n  \n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.value.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type:'USER_INPUT',val:event.target.value});\n\n    setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type:'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    ctx.onLogin(emailState.value, passwordState.value);\n  };\n\n\n  return (\n    <Card className={classes.login}>\n    <form onSubmit={submitHandler}>\n      <Input\n        id=\"email\"\n        label=\"E-Mail\"\n        type=\"email\"\n        isValid={emailIsValid}\n        value={emailState.value}\n        onChange={emailChangeHandler}\n        onBlur={validateEmailHandler}\n      />\n      <Input\n        id=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        isValid={passwordIsValid}\n        value={passwordState.value}\n        onChange={passwordChangeHandler}\n        onBlur={validatePasswordHandler}\n      />\n      <div className={classes.actions}>\n        <Button type=\"submit\" className={classes.btn}>\n          Login\n        </Button>\n      </div>\n    </form>\n  </Card>\n);\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}